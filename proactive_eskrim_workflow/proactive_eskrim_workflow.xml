<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.12" xsi:schemaLocation="urn:proactive:jobdescriptor:3.12 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.12/schedulerjob.xsd"  name="eskrim prj_name"  priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="1"  >
  <variables>
    <variable name="SAMPLES_DIR" value="" />
    <variable name="FORWARD_READS_SUFFIX" value="" />
    <variable name="READS_LENGTH" value="" />
    <variable name="KMERS_LENGTH" value="" />
    <variable name="NUM_READS" value="" />
    <variable name="OUTPUT_FILE" value="" />
    <variable name="ESKRIM_PATH" value="" />
    <variable name="TEMP_OUTPUT_DIR" value="" />
    <variable name="FORCE_OVERWRITE" model="PA:Boolean" value="" />
  </variables>
  <genericInformation>
    <info name="bucketName" value="mgps"/>
    <info name="workflow.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
    <info name="group" value="public-objects"/>
  </genericInformation>
  <taskFlow>
    <task name="check_parameters" 
    
    onTaskError="cancelJob" 
    
    
    fork="true"
    runAsMe="true" >
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
import os
import errno
import subprocess
 
def check_dir(dir_path):
	if not os.path.exists(dir_path):
		raise IOError(errno.ENOENT, os.strerror(errno.ENOENT), dir_path)

def check_eskrim_script(eskrim_path):
    try:
        with open(os.devnull, 'w') as devnull:
            subprocess.call(['python3', eskrim_path, '--version']) #, stdout=devnull, stderr=devnull)
    except OSError:
        raise RuntimeError('{0} not found or not in system path'.format(program))

def check_file_is_writable(file_path):
	with open(file_path, 'w+') as ifs:
		pass

# Check mandatory directories
eskrim_path = variables.get("ESKRIM_PATH")
check_eskrim_script(eskrim_path)

samples_dir = variables.get("SAMPLES_DIR")
check_dir(samples_dir)

# check output file
output_file = variables.get("OUTPUT_FILE")
check_file_is_writable(output_file)

# Create temp dir
temp_output_dir = variables.get("TEMP_OUTPUT_DIR")
check_dir(temp_output_dir)

# Convert boolean parameters
variables["FORCE_OVERWRITE"] = variables["FORCE_OVERWRITE"].lower() in ['1', 'true']
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            194.1500244140625
        </positionTop>
        <positionLeft>
            530.0833129882812
        </positionLeft>
      </metadata>
    </task>
    <task name="list_samples" 
    
    onTaskError="cancelJob" 
    
    
    fork="true"
    runAsMe="true" >
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
      </genericInformation>
      <depends>
        <task ref="check_parameters"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
import os

samples_dir = variables.get("SAMPLES_DIR")

# List samples
samples = (d for d in os.listdir(samples_dir) if os.path.isdir(os.path.join(samples_dir,d)))
samples = {i:d for (i,d) in enumerate(samples)}

print('info: {} samples to process'.format(len(samples)))
for i, sample in samples.items():
	print('info: sample {} - {}'.format(i, sample))

result = samples
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <replicate>
          <script>
            <code language="groovy">
              <![CDATA[
runs=result.size()
]]>
            </code>
          </script>
        </replicate>
      </controlFlow>
      <metadata>
        <positionTop>
            320.48333740234375
        </positionTop>
        <positionLeft>
            530.0833129882812
        </positionLeft>
      </metadata>
    </task>
    <task name="kmers_richness" 
    
    
    
    
    fork="true"
    runAsMe="true" >
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
      </genericInformation>
      <depends>
        <task ref="list_samples"/>
      </depends>
      <parallel numberOfNodes="2">
        <topology>
          <singleHost/>
        </topology>
      </parallel>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
import os
import sys
import tempfile
import subprocess

def check_file_not_empty(f):
    try:
    	return os.path.getsize(f) > 0
    except:
        return False

# Get variables
replication = variables.get('PA_TASK_REPLICATION')
nodes_number = variables.get('PA_NODESNUMBER')
num_threads = nodes_number*2

eskrim_path = variables.get('ESKRIM_PATH')
samples_dir = variables.get('SAMPLES_DIR')
temp_output_dir = variables.get('TEMP_OUTPUT_DIR')
forward_reads_suffix = variables.get('FORWARD_READS_SUFFIX')
reads_length = variables.get('READS_LENGTH')
kmers_length = variables.get('KMERS_LENGTH')
num_reads = variables.get('NUM_READS')
force_overwrite = variables.get('FORCE_OVERWRITE')

sample_name = results[0].value()[replication]
sample_dir = os.path.join(samples_dir, sample_name)

kmers_richness_stats_file = sample_name + '.' + kmers_length + 'mers_richness.tsv'
kmers_richness_stats_file = os.path.join(temp_output_dir, kmers_richness_stats_file)

print('info: current sample - {}'.format(sample_name))

if not force_overwrite and check_file_not_empty(kmers_richness_stats_file):
    print(f'warning: Sample {sample_name} has already been processed and will be skipped.')
    sys.exit(0)

# List fastq files
accepted_extensions = {'.fastq', '.fq', '.fastq.gz', '.fq.gz'}
accepted_extensions = {forward_reads_suffix + accepted_extension for accepted_extension in accepted_extensions}
fastq_files = [f for f in os.listdir(sample_dir) if any(f.endswith(accepted_extension) for accepted_extension in accepted_extensions)]
fastq_files = [os.path.join(sample_dir, fastq_file) for fastq_file in fastq_files]

print('info: {} fastq files found'.format(len(fastq_files)))
for i, fastq_file in enumerate(fastq_files):
	print('info: fastq file {} - {}'.format(i, fastq_file))

# Launch kmers richness


my_env = os.environ.copy()
my_env["PATH"] = "/usr/local/bin:" + my_env["PATH"]

kmers_richness_command = ['python3',
                    eskrim_path,
					'-n', sample_name,
					'-l', reads_length,
					'-k', kmers_length,
					'-r', num_reads,
					'-t', str(num_threads),
					'-s', kmers_richness_stats_file,
                    '-i'] + fastq_files
					
kmers_richness_command_txt = ' '.join(kmers_richness_command)

print('info: command launched - {}'.format(kmers_richness_command_txt))
subprocess.check_call(kmers_richness_command, env=my_env)
print('info: command succeeded')
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            451.816650390625
        </positionTop>
        <positionLeft>
            530.0833129882812
        </positionLeft>
      </metadata>
    </task>
    <task name="merge_output_files" 
    
    
    
    
    fork="true"
    runAsMe="true" >
      <genericInformation>
        <info name="task.icon" value="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png"/>
      </genericInformation>
      <depends>
        <task ref="kmers_richness"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="cpython">
            <![CDATA[
import os
import shutil

kmers_length = variables.get('KMERS_LENGTH')
temp_output_files_ext = kmers_length + 'mers_richness.tsv'

temp_output_dir = variables.get('TEMP_OUTPUT_DIR')
final_output_file = variables.get('OUTPUT_FILE')

# Merge output_files
temp_output_files = [f for f in os.listdir(temp_output_dir) if f.endswith(temp_output_files_ext)]
temp_output_files = [os.path.join(temp_output_dir,f) for f in temp_output_files]

if len(temp_output_files) == 0:
	raise RuntimeError('error: no statistics files found')

with open(final_output_file, 'w') as ofs:
	with open(temp_output_files[0], 'r') as ifs:
		header = ifs.readline()
		ofs.write(header)
		 
	for tmp_output_file in temp_output_files:
		with open(tmp_output_file, 'r') as ifs:	
			ifs.readline()
			print('info: copying {} in {}'.format(tmp_output_file, final_output_file))
			shutil.copyfileobj(ifs, ofs)
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
            575.1500244140625
        </positionTop>
        <positionLeft>
            529.0833129882812
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2830px;
            height:3376px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-189.1500244140625px;left:-524.0833129882812px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable" style="top: 194.15px; left: 530.083px;" id="jsPlumb_1_190"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/studio/images/Python.png" width="20px">&nbsp;<span class="name">check_parameters</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" style="top: 320.483px; left: 530.083px;" id="jsPlumb_1_193"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">list_samples</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" style="top: 451.816px; left: 530.083px;" id="jsPlumb_1_196"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">kmers_richness</span></a></div><div class="task ui-draggable _jsPlumb_endpoint_anchor_" style="top: 575.15px; left: 529.083px;" id="jsPlumb_1_199"><a class="task-name" data-toggle="tooltip" data-placement="right" title="This task has no description"><img src="/automation-dashboard/styles/patterns/img/wf-icons/controls_replicate.png" width="20px">&nbsp;<span class="name">merge_output_files</span></a></div><svg style="position:absolute;left:569.5px;top:233.5px" width="30.5" height="87" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 0 86 C -10 36 19.5 50 9.5 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.0443281250000003,64.94400000000002 L7.950423595698275,46.2596499165318 L0.11038050220630602,51.11080692205006 L-5.882769482251685,44.104941289325495 L-2.0443281250000003,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M-2.0443281250000003,64.94400000000002 L7.950423595698275,46.2596499165318 L0.11038050220630602,51.11080692205006 L-5.882769482251685,44.104941289325495 L-2.0443281250000003,64.94400000000002" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:599.5px;top:349.5px" width="24.200000000000045" height="103" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 3.2000000000000455 92 C 13.200000000000045 92 -10 -10 0 0 " transform="translate(10.5,10.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#e5db3d" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.72257040000004,80.48725400000001 L11.355882599333473,60.06016919416339 L4.777076201428486,66.51921760541441 L-2.6121537952521168,61.005663392734945 L5.72257040000004,80.48725400000001" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M5.72257040000004,80.48725400000001 L11.355882599333473,60.06016919416339 L4.777076201428486,66.51921760541441 L-2.6121537952521168,61.005663392734945 L5.72257040000004,80.48725400000001" class="" stroke="rgba(229,219,61,0.5)" fill="rgba(229,219,61,0.5)" transform="translate(10.5,10.5)"></path></svg><div style="position: absolute; transform: translate(-50%, -50%); left: 611.1px; top: 401.75px;" class="_jsPlumb_overlay l1 component label" id="jsPlumb_1_210">replicate</div><svg style="position:absolute;left:569.5px;top:359.5px" width="23" height="93" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 2 92 C 12 42 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M4.662848,69.96108799999999 L10.55194460721556,49.60627183401897 L3.892636565154158,55.98229068600932 L-3.426852706775108,50.37648326886482 L4.662848,69.96108799999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M4.662848,69.96108799999999 L10.55194460721556,49.60627183401897 L3.892636565154158,55.98229068600932 L-3.426852706775108,50.37648326886482 L4.662848,69.96108799999999" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><svg style="position:absolute;left:571.5px;top:491.5px" width="31" height="84" pointer-events="none" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml" class="_jsPlumb_connector "><path d="M 10 83 C 20 33 -10 50 0 0 " transform="translate(10.5,0.5)" pointer-events="visibleStroke" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="none" stroke="#666" style=""></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M12.02504,62.650558000000004 L15.704473378936731,41.78283723298843 L9.764916861770937,48.83419656147207 L1.8881119404088,44.04296037121749 L12.02504,62.650558000000004" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path><path pointer-events="all" version="1.1" xmlns="http://www.w3.org/1999/xhtml" d="M12.02504,62.650558000000004 L15.704473378936731,41.78283723298843 L9.764916861770937,48.83419656147207 L1.8881119404088,44.04296037121749 L12.02504,62.650558000000004" class="" stroke="#666" fill="#666" transform="translate(10.5,0.5)"></path></svg><div style="position: absolute; height: 20px; width: 20px; left: 579.5px; top: 224px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 570px; top: 350px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 570px; top: 310px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 600px; top: 350px;" class="_jsPlumb_endpoint source-endpoint replicate-source-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 572px; top: 482px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 603.2px; top: 442px;" class="_jsPlumb_endpoint target-endpoint replicate-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected _jsPlumb_endpoint_full"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#e5db3d" stroke="none" style=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 572px; top: 442px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 582px; top: 605px;" class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div><div style="position: absolute; height: 20px; width: 20px; left: 582px; top: 565px;" class="_jsPlumb_endpoint target-endpoint dependency-target-endpoint _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable _jsPlumb_endpoint_connected"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>
